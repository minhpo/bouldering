//
//  ViewGymDetailsRouter.swift
//  Bouldering
//
//  Created by Po Sam on 26/12/2017.
//  Copyright (c) 2017 Mobairu. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ViewGymDetailsRoutingLogic {
    func viewDidLoad()
    func navigateToMap()
}

protocol ViewGymDetailsDataPassing {
    var dataStore: ViewGymDetailsDataStore? { get }
}

class ViewGymDetailsRouter: NSObject, ViewGymDetailsRoutingLogic, ViewGymDetailsDataPassing {
    
    weak var viewController: ViewGymDetailsViewController?
    
    var dataStore: ViewGymDetailsDataStore?
    
    private var interactionController: HideGymDetailsInteractionController?
    
    // MARK: Routing
    
    func viewDidLoad() {
        viewController?.transitioningDelegate = self
        
        if let view = viewController?.detailsOverlayView {
            interactionController = HideGymDetailsInteractionController(view: view, callback: navigateToMap)
        }
    }
    
    // MARK: Navigation
    
    func navigateToMap() {
        viewController?.dismiss(animated: true, completion: nil)
    }
    
    // MARK: Passing data
    
}

extension ViewGymDetailsRouter: UIViewControllerTransitioningDelegate {
    
    func animationController(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {
        return ShowGymDetailsOverlayAnimator()
    }
    
    func animationController(forDismissed dismissed: UIViewController) -> UIViewControllerAnimatedTransitioning? {
        return HideGymDetailsOverlayAnimator()
    }
    
    func interactionControllerForDismissal(using animator: UIViewControllerAnimatedTransitioning) -> UIViewControllerInteractiveTransitioning? {
        guard let interactionController = self.interactionController,
            interactionController.interactionInProgress else { return nil }
        
        return interactionController
    }
    
}
