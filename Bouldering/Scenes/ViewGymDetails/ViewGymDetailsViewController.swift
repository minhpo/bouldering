//
//  ViewGymDetailsViewController.swift
//  Bouldering
//
//  Created by Po Sam on 26/12/2017.
//  Copyright (c) 2017 Mobairu. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ViewGymDetailsDisplayLogic: class {
    func display(viewModel: GymDetailsViewModel)
}

class ViewGymDetailsViewController: UIViewController, ViewGymDetailsDisplayLogic {
    
    @IBOutlet weak var transparentOverlayView: UIView!
    @IBOutlet weak var whiteBackgroundView: UIView! // Required due to safe area on iPhone X
    @IBOutlet weak var detailsOverlayView: GymDetailsOverlayView!
    
    var animatableViews: [UIView] {
        return [whiteBackgroundView, detailsOverlayView]
    }
    
    var interactor: ViewGymDetailsBusinessLogic?
    var router: (NSObjectProtocol & ViewGymDetailsRoutingLogic & ViewGymDetailsDataPassing)?
    
    private var contentViewController: GymDetailsContentTableViewController?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = ViewGymDetailsInteractor()
        let presenter = ViewGymDetailsPresenter()
        let router = ViewGymDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        setContentViewController()
        
        router?.viewDidLoad()
        interactor?.start()
    }
    
    private func setContentViewController() {
        guard let contentViewController = childViewControllers.first(where: { $0 is GymDetailsContentTableViewController }) as? GymDetailsContentTableViewController else { return }
        
        self.contentViewController = contentViewController
        self.contentViewController?.delegate = self
    }
    
    // MARK: Do something
    
    func display(viewModel: GymDetailsViewModel) {
        contentViewController?.configure(viewModel: viewModel)
    }
    
    @IBAction func closeButtonPressed(sender: UIButton) {
        router?.navigateToMap()
    }
}

extension ViewGymDetailsViewController: GymContactsDelegate {
    
    func call() {
        interactor?.call()
    }
    
    func mail() {
        interactor?.mail()
    }
    
    func visitWebsite() {
        interactor?.visitWebsite()
    }
    
}
